#include <iostream>
#include <cstdio>
#include <list>
#include <vector>

using namespace std;

#define MAX_M 3010
#define MAX_USE 4

int memory[MAX_M][MAX_M][MAX_USE] ={ 0 };
vector<bool> isPrimeNumber;

bool CheckPrimaryNumber(int n) {
	for(int i=2; i<n; i++) {
		if(n % i == 0) return false;
	}

	return true;
}

void makePrimeArray(int n) {
	isPrimeNumber.push_back(false);
	for(int i=1; i<=n; i++) {
		if(i == 1) isPrimeNumber.push_back(false);
		else if(CheckPrimaryNumber(i) == true) isPrimeNumber.push_back(true);
		else isPrimeNumber.push_back(false);
	}
}

int Solution(int remain, int count, int now_num) {
	if(remain <= 0) return 0;

	if(remain < now_num) return 0;
	if(count == 1) {
		if(isPrimeNumber[remain] == true) return 1;
		else return 0;
	}
	//if(memory[remain][count][now_num] != 0) return memory[remain][count][now_num];

	int result = 0;
	for(int i=now_num; i<remain; i++) {
		if(isPrimeNumber[i] == true) {
			result += Solution(remain - i, count - 1, i+1);
		}
	}

	//memory[remain][count][now_num] = result;

	return result;
}

int main(void) {
	int n;

	cin >> n;
	
	makePrimeArray(n);
	cout << Solution(n, 3, 2) << endl;
	
	return 0;
}
